{"version":3,"sources":["views/app/dashboard/dashboard.js","components/common/CustomBootstrap.js","containers/navs/Breadcrumb.js"],"names":["Dashboard","Component","render","xxs","heading","match","this","props","className","id","sm","md","Colxx","widths","Separator","getMenuTitle","sub","getUrl","path","index","split","BreadcrumbItems","substr","paths","length","indexOf","filter","x","map","key","active","to","BreadcrumbContainer"],"mappings":"gHAAA,wIAMe,MAAMA,UAAkBC,YACnCC,SACI,OACI,kBAAC,WAAD,KACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,IAAI,MACT,kBAAC,IAAD,CAAYC,QAAQ,YAAYC,MAAOC,KAAKC,MAAMF,QAClD,kBAAC,IAAD,CAAWG,UAAU,WAGzB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOL,IAAI,KAAKK,UAAU,QACxB,2BAAG,kBAAC,IAAD,CAAcC,GAAG,iBAGxB,kBAAC,IAAD,KACF,kBAAC,IAAD,CAAON,IAAI,MAKT,kBAAC,IAAD,CAAUK,UAAU,2BAClB,kBAAC,IAAD,CAAOL,IAAI,IAAIO,GAAG,IAAIC,GAAG,IAAIH,UAAU,QACrC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUA,UAAU,eAClB,uBAAGA,UAAU,qBACb,uBAAGA,UAAU,uCAAb,kBAGA,uBAAGA,UAAU,oBAAb,SAKN,kBAAC,IAAD,CAAOL,IAAI,IAAIO,GAAG,IAAIC,GAAG,IAAIH,UAAU,QACrC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUA,UAAU,eAClB,uBAAGA,UAAU,4BACb,uBAAGA,UAAU,uCAAb,oBAGA,uBAAGA,UAAU,oBAAb,SAIN,kBAAC,IAAD,CAAOL,IAAI,IAAIO,GAAG,IAAIC,GAAG,IAAIH,UAAU,QACrC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUA,UAAU,eAClB,uBAAGA,UAAU,6BACb,uBAAGA,UAAU,uCAAb,mBAGA,uBAAGA,UAAU,oBAAb,SAIN,kBAAC,IAAD,CAAOL,IAAI,IAAIO,GAAG,IAAIC,GAAG,IAAIH,UAAU,QACrC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUA,UAAU,eAClB,uBAAGA,UAAU,yBACb,uBAAGA,UAAU,uCAAb,gBAGA,uBAAGA,UAAU,oBAAb,gB,gCCrEpB,iGAEMI,EAASL,GACX,kBAAC,IAAD,iBAASA,EAAT,CAAgBM,OAAQ,CAAC,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,UAE5DC,EAAaP,GACf,yBAAKC,UAAS,oBAAeD,EAAMC,c,gCCNvC,sDAKMO,EAAeC,GACZ,kBAAC,IAAD,CAAcP,GAAE,eAAUO,KAG7BC,EAAS,CAACC,EAAMF,EAAKG,IACX,IAAVA,EACK,GAEAD,EAAKE,MAAMJ,GAAK,GAAKA,EAanBK,EAAkB,EAAGhB,YAChC,IAAMa,EAAOb,EAAMa,KAAKI,OAAO,GAC3BC,EAAQL,EAAKE,MAAM,KAIvB,OAHIG,EAAMA,EAAMC,OAAS,GAAGC,QAAQ,MAAQ,IAC1CF,EAAQA,EAAMG,OAAOC,IAAyB,IAApBA,EAAEF,QAAQ,OAGpC,kBAAC,WAAD,KACE,kBAAC,IAAD,CAAYjB,UAAU,iEACnBe,EAAMK,IAAI,CAACZ,EAAKG,IAEb,kBAAC,IAAD,CAAgBU,IAAKV,EAAOW,OAAQP,EAAMC,SAAWL,EAAQ,GAC1DI,EAAMC,SAAWL,EAAQ,EACxB,kBAAC,IAAD,CAASY,GAAI,IAAMd,EAAOC,EAAMF,EAAKG,IAClCJ,EAAaC,IAGhBD,EAAaC,QAUdgB,IApCa,EAAG5B,UAASC,WAEpC,kBAAC,WAAD,KACGD,GAAW,4BAAI,kBAAC,IAAD,CAAcK,GAAIL,KAClC,kBAACiB,EAAD,CAAiBhB,MAAOA","file":"static/js/start.7e95b7e0.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { Row, Card, CardBody } from \"reactstrap\";\nimport IntlMessages from \"../../../helpers/IntlMessages\";\nimport { Colxx, Separator } from \"../../../components/common/CustomBootstrap\";\nimport Breadcrumb from \"../../../containers/navs/Breadcrumb\";\nimport Sortable from \"react-sortablejs\";\nexport default class Dashboard extends Component {\n    render() {\n        return (\n            <Fragment>\n            <Row>\n              <Colxx xxs=\"12\">\n                <Breadcrumb heading=\"Dashboard\" match={this.props.match} />\n                <Separator className=\"mb-5\" />\n              </Colxx>\n            </Row>\n            <Row>\n              <Colxx xxs=\"12\" className=\"mb-4\">\n                <p><IntlMessages id=\"Dashboard\"/></p>\n              </Colxx>\n            </Row>\n            <Row>\n          <Colxx xxs=\"12\">\n            {/* <h5 className=\"mb-4\">\n              <IntlMessages id=\"sortable.columns\" />\n            </h5> */}\n\n            <Sortable className=\"row icon-cards-row mb-2\">\n              <Colxx xxs=\"6\" sm=\"4\" md=\"3\" className=\"mb-4\">\n                <Card>\n                  <CardBody className=\"text-center\">\n                    <i className=\"iconsminds-clock\" />\n                    <p className=\"card-text font-weight-semibold mb-0\">\n                      Pending Orders\n                    </p>\n                    <p className=\"lead text-center\">14</p>\n                  </CardBody>\n                </Card>\n              </Colxx>\n\n              <Colxx xxs=\"6\" sm=\"4\" md=\"3\" className=\"mb-4\">\n                <Card>\n                  <CardBody className=\"text-center\">\n                    <i className=\"iconsminds-basket-coins\" />\n                    <p className=\"card-text font-weight-semibold mb-0\">\n                      Completed Orders\n                    </p>\n                    <p className=\"lead text-center\">32</p>\n                  </CardBody>\n                </Card>\n              </Colxx>\n              <Colxx xxs=\"6\" sm=\"4\" md=\"3\" className=\"mb-4\">\n                <Card>\n                  <CardBody className=\"text-center\">\n                    <i className=\"iconsminds-arrow-refresh\" />\n                    <p className=\"card-text font-weight-semibold mb-0\">\n                      Refund Requests\n                    </p>\n                    <p className=\"lead text-center\">74</p>\n                  </CardBody>\n                </Card>\n              </Colxx>\n              <Colxx xxs=\"6\" sm=\"4\" md=\"3\" className=\"mb-4\">\n                <Card>\n                  <CardBody className=\"text-center\">\n                    <i className=\"iconsminds-mail-read\" />\n                    <p className=\"card-text font-weight-semibold mb-0\">\n                      New Comments\n                    </p>\n                    <p className=\"lead text-center\">25</p>\n                  </CardBody>\n                </Card>\n              </Colxx>\n            </Sortable>\n          </Colxx>\n        </Row>\n          </Fragment>\n        )\n    }\n}\n","import React from 'react';\nimport { Col } from 'reactstrap';\nconst Colxx = (props) => (\n    <Col {...props} widths={['xxs', 'xs', 'sm', 'md', 'lg', 'xl', 'xxl']} />\n);\nconst Separator = (props) => (\n    <div className={`separator ${props.className}`}></div>\n);\nexport { Colxx,Separator }","import React, { Fragment } from \"react\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport IntlMessages from \"../../helpers/IntlMessages\";\n\nconst getMenuTitle = sub => {\n  return <IntlMessages id={`menu.${sub}`} />;\n};\n\nconst getUrl = (path, sub, index) => {\n  if (index === 0) {\n    return \"\";\n  } else {\n    return path.split(sub)[0] + sub;\n  }\n};\n\nconst BreadcrumbContainer = ({ heading, match }) => {\n  return (\n    <Fragment>\n      {heading && <h1><IntlMessages id={heading}/></h1>}\n      <BreadcrumbItems match={match} />\n    </Fragment>\n  );\n};\n\nexport const BreadcrumbItems = ({ match }) => {\n  const path = match.path.substr(1);\n  let paths = path.split(\"/\");\n  if (paths[paths.length - 1].indexOf(\":\") > -1) {\n    paths = paths.filter(x => x.indexOf(\":\") === -1);\n  }\n  return (\n    <Fragment>\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\n        {paths.map((sub, index) => {\n          return (\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\n              {paths.length !== index + 1 ? (\n                <NavLink to={\"/\" + getUrl(path, sub, index)}>\n                  {getMenuTitle(sub)}\n                </NavLink>\n              ) : (\n                getMenuTitle(sub)\n              )}\n            </BreadcrumbItem>\n          );\n        })}\n      </Breadcrumb>\n    </Fragment>\n  );\n};\n\nexport default BreadcrumbContainer;\n"],"sourceRoot":""}