{"version":3,"sources":["service/graphql/Brand.js","service/graphql/Product.js","service/graphql/Category.js","service/graphql/ProductOption.js","views/app/products/productdetail.js","components/common/CustomBootstrap.js","service/graphql/index.js","containers/navs/Breadcrumb.js","components/common/react-notifications/index.js","service/api/config.js","components/common/CustomSelectInput.js","../node_modules/react-select/dist/react-select.browser.esm.js","libs/converter.js","components/LanguageSelector/LanguageSelector.jsx","components/LanguageSelector/index.js","service/graphql/Language.js"],"names":["params","callback","query","gql","page","pageSize","langCode","GRAPHQL","doQuery","then","response","status","data","JSON","parse","saleGetBrands","e","message","catch","error","console","log","mutation","brandId","brandIdentifier","brandSellerId","brandFeatured","brandActive","langData","doMutate","salePostBrand","Message","id","saleDeleteBrand","saleGetProducts","saleGetProduct","_id","product_identifier","product_type","product_image","product_width","product_height","product_length","product_weight","product_options","categories","product_dismension_unit","product_brand_id","product_approved","product_added_by_admin_id","product_description","lang_data","salePostProduct","product_id","saleDeleteProduct","saleGetAllCategories","parentId","keyword","saleListCategories","categoryId","saleGetCategory","prodcatId","prodcatParent","prodcatActive","prodcatImage","prodcatFeatured","prodcatIdentifier","prodcatDisplayOrder","salePostCateogry","saleDeleteCategory","saleGetProductOptions","option_identifier","salePostProductOption","option_id","saleDeleteProductOption","BlankPage","Component","constructor","props","super","handleChangeLabelOver","selectedOptionLabelOver","this","setState","getProductOption","ProductOptionService","getProductOptions","productoptions","results","currentPage","tempOptions","forEach","item","temp","label","value","key","push","selectData","getListCategories","CategoryService","optionsTmp","element","obj","name","prodcat_id","categoryOptions","state","selectedCategory","getCategoryList","getSelectedCategory","selectedCategories","getBrands","BrandService","getBrandsForSelector","brands","brand_identifier","brandOptions","loadBrandOptions","inputValue","setTimeout","filterBrands","filter","i","toLowerCase","includes","handleChangeMulti","selectedOptions","length","getOptionList","selectedItem","handleChangeCategories","selectedOption","selectedOptionLabelTop","startDate","startDateLabelOver","startDateLabelTop","startDateTime","startDateRange","endDateRange","embeddedDate","moment","tags","tagsLabelOver","tagsLabelTop","selectedProductId","operatorOptions","langs","langOptions","selectedLangIndex","editState","productOptionOptions","componentDidMount","match","ProductService","getProduct","res","gqlToLanguageOptions","getInitialSelectedOptions","options","initializeSelectedItem","getDefaultLanguageOptions","optionArray","option","find","product_weight_unit","componentWillReceiveProps","nextProps","onChangeProperty","type","reader","FileReader","readAsDataURL","onloadend","result","getSelectedOption","onChangeName","title","addNewInstance","undefined","templangData","plainListToGql","postProduct","history","NotificationManager","updateCheckBox","field","finalStr","join","handleSubmit","stopPropagation","preventDefault","isSubmitting","render","xxs","heading","className","onSubmit","bind","md","required","onChange","target","components","Input","CustomSelectInput","loadOptions","defaultOptions","onInputChange","handleInputChange","color","onClick","classNamePrefix","isMulti","files","src","Config","BACKEND_API_URL","onChangeTab","index","style","display","flexDirection","marginBottom","inline","checked","defaultChecked","Colxx","widths","Separator","API_URL","ApolloClient","uri","headers","Authorization","graphQLErrors","mutate","stringify","indexOf","getMenuTitle","sub","getUrl","path","split","BreadcrumbItems","substr","paths","x","map","active","to","BreadcrumbContainer","Notifications","config","configReady","COVID_API_URL","AUTH_API_URL","customProps","Object","assign","autoCorrect","autoCapitalize","NonceProvider","_Component","subClass","superClass","_this","call","createEmotionCache","nonce","createCache","memoizeOne","prototype","create","__proto__","emotionCache","React","createElement","CacheProvider","children","manageState","Select","objectStr","extractedObjStr","slice","languageList","fieldName","lang","tempOption","lang_code","cb","LanguageService","getLanguages","LanguageSelector","Label","selectedIndex","onSelect","idx","saleGetShopLangs","lang_name","salePostShopLang","saleDeleteShopLang"],"mappings":"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","file":"static/js/25.ef253956.chunk.js","sourcesContent":["import gql from 'graphql-tag';\nimport GRAPHQL from './index'\nimport moment from 'moment'\n\nexport default class {\n\n  static getBrands(params, callback) {\n    const query = {\n      query: gql`\n        {\n          saleGetBrands(page: ${params.page}, pageSize:${params.pageSize}, lang_code:\"${params.langCode}\") {\n            status\n            message\n            success\n            data\n          }\n        }\n      `,\n    };\n    GRAPHQL.doQuery(query)\n    .then(response => {\n      try {\n        return callback({\n          status: 1,\n          data: JSON.parse(response.data.saleGetBrands.data)\n        })\n      } catch (e) {\n        return callback({ status: 0, message: \"HTTPERROR\" })\n      }\n    })\n    .catch(error => {\n      return callback({ status: 0, message: error })\n    })\n  }\n\n  static getBrandsForSelector(callback) {\n    const query = {\n      query: gql`\n        {\n          saleGetBrands {\n            status\n            message\n            success\n            data\n          }\n        }\n      `,\n    };\n    GRAPHQL.doQuery(query)\n    .then(response => {\n      try {\n        return callback({\n          status: 1,\n          data: JSON.parse(response.data.saleGetBrands.data)\n        })\n      } catch (e) {\n        return callback({ status: 0, message: \"HTTPERROR\" })\n      }\n    })\n    .catch(error => {\n      return callback({ status: 0, message: error })\n    })\n  }\n\n  \n  static postBrand(data,callback) {\n    console.log('postBrand...req',data)\n    const query = {\n      mutation: gql`\n          mutation{\n            salePostBrand(\n              brand_id: \"${data.brandId}\",\n              brand_identifier: \"${data.brandIdentifier}\",\n              brand_seller_id: \"${data.brandSellerId}\",\n              brand_featured: ${data.brandFeatured},\n              brand_active: ${data.brandActive},                        \n              lang_data:${data.langData}\n            ) {\n              status\n              message\n              success\n              data\n            }\n          }\n        `\n    }\n    GRAPHQL.doMutate(query)\n      .then(response => {\n        console.log(\"response....\",response)\n        try {\n          return callback({\n            status: 1,\n            data: JSON.parse(response.data.salePostBrand.data)\n          })\n        } catch (e) {\n          console.log(\"e on mutate...\",e)\n          return callback({ status: 0, message: e.Message })\n        }\n      })\n      .catch(error => {\n        return callback({ status: 0, message: error })\n      })\n  }\n\n\n  static deleteBrand(id,callback) {\n    const query = {\n      mutation: gql`\n          mutation{\n            saleDeleteBrand(\n              brand_id:\"${id}\"\n            ) {\n              status\n              message\n              success\n              data\n            }\n          }\n        `\n    }\n\n    GRAPHQL.doMutate(query)\n      .then(response => {\n        console.log(\"response....\",response)\n        try {\n          return callback({\n            status: 1,\n            data: JSON.parse(response.data.saleDeleteBrand.data)\n          })\n        } catch (e) {\n          console.log(\"e on mutate...\",e)\n          return callback({ status: 0, message: e.Message })\n        }\n      })\n      .catch(error => {\n        return callback({ status: 0, message: error })\n      })\n  }\n\n \n}\n","import gql from 'graphql-tag';\nimport GRAPHQL from './index'\n\nexport default class {  \n  static getProducts(data, callback) {\n    const query = {\n      query: gql`\n        {\n          saleGetProducts(page: ${data.page}, pageSize:${data.pageSize}, lang_code: \"en\") {\n            status\n            message\n            success\n            data\n          }\n       }`\n    }\n\n    GRAPHQL.doQuery(query)\n      .then(response => {\n        try {\n          return callback({\n            status: 1,\n            data: JSON.parse(response.data.saleGetProducts.data)\n          })\n        } catch (e) {\n          return callback({ status: 0, message: \"HTTPERROR\" })\n        }\n      })\n      .catch(error => {\n        return callback({ status: 0, message: error })\n      })\n  }\n\n  static getProduct(id,callback) {\n    const query = {\n      query: gql`\n        {\n          saleGetProduct(product_id: \"${id}\") {\n            status\n            message\n            success\n            data\n          }\n       }`\n    }\n\n    GRAPHQL.doQuery(query)\n      .then(response => {\n        try {\n          return callback({\n            status: 1,\n            data: JSON.parse(response.data.saleGetProduct.data)\n            \n          })\n        } catch (e) {\n          return callback({ status: 0, message: \"HTTPERROR\" })\n        }\n      })\n      .catch(error => {\n        return callback({ status: 0, message: error })\n      })\n  }\n\n  static postProduct(data,callback) {\n    console.log('postProduct params...',data)\n    const query = {\n      mutation: gql`\n        mutation {\n          salePostProduct(\n            product_id: \"${data._id?data._id:''}\", ,\n            product_identifier: \"${data.product_identifier}\",\n            product_type: \"${data.product_type}\",\n            product_image: \"${data.product_image}\",\n            product_width: ${data.product_width},\n            product_height: ${data.product_height},\n            product_length: ${data.product_length},\n            product_weight: ${data.product_weight},\n            product_weight_unit: \"${data.product_weight}\",\n            product_options:${data.product_options},\n            categories:${data.categories},\n            product_dismension_unit: \"${data.product_dismension_unit}\",\n            product_brand_id: \"${data.product_brand_id}\",\n            product_approved:  ${data.product_approved?\"true\":\"false\"},\n            product_added_by_admin_id:  ${data.product_added_by_admin_id?\"true\":\"false\"},\n            product_description: \"${data.product_description}\",\n            lang_data:${data.lang_data},\n          ) {\n            status\n            message\n            success\n            data\n          }\n        }    \n      `\n    }\n    GRAPHQL.doMutate(query)\n      .then(response => {\n        try {\n          return callback({\n            status: 1,\n            data: JSON.parse(response.data.salePostProduct.data)\n          })\n        } catch (e) {\n          return callback({ status: 0, message: e.Message })\n        }\n      })\n      .catch(error => {\n        return callback({ status: 0, message: error })\n      })\n  }\n\n\n  static deleteProduct(product_id,callback) {\n    const query = {\n      mutation: gql`\n          mutation{\n            saleDeleteProduct(\n              product_id:\"${product_id}\"\n            ) {\n              status\n              message\n              success\n              data\n            }\n          }\n        `\n    }\n\n    GRAPHQL.doMutate(query)\n      .then(response => {\n        try {\n          return callback({\n            status: 1,\n            data: JSON.parse(response.data.saleDeleteProduct.data)\n          })\n        } catch (e) {\n          return callback({ status: 0, message: e.Message })\n        }\n      })\n      .catch(error => {\n        return callback({ status: 0, message: error })\n      })\n  }\n\n \n}\n","import gql from 'graphql-tag';\nimport GRAPHQL from './index'\nimport moment from 'moment'\n\nexport default class {\n\n  static getCategories(params, callback) {\n    const query = {\n      query: gql`\n        {\n          saleGetAllCategories(page: ${params.page}, pageSize:${params.pageSize}, lang_code:\"${params.langCode}\") {\n            status\n            message\n            success\n            data\n          }\n        }\n      `,\n    };\n    GRAPHQL.doQuery(query)\n    .then(response => {\n      try {\n        return callback({\n          status: 1,\n          data: JSON.parse(response.data.saleGetAllCategories.data)\n        })\n      } catch (e) {\n        return callback({ status: 0, message: \"HTTPERROR\" })\n      }\n    })\n    .catch(error => {\n      return callback({ status: 0, message: error })\n    })\n  }\n\n  static getListCategories(params, callback) {\n    const query = {\n      query: gql`\n        {\n          saleListCategories(parent_id: \"${params.parentId}\", keyword:\"${params.keyword}\", lang_code: \"${params.langCode}\") {\n            status\n            message\n            success\n            data\n          }\n        }\n      `,\n    };\n    GRAPHQL.doQuery(query)\n    .then(response => {\n      try {\n        return callback({\n          status: 1,\n          data: JSON.parse(response.data.saleListCategories.data)\n        })\n      } catch (e) {\n        return callback({ status: 0, message: \"HTTPERROR\" })\n      }\n    })\n    .catch(error => {\n      return callback({ status: 0, message: error })\n    })\n  }\n\n  static getCategory(params, callback) {\n    const query = {\n      query: gql`\n        {\n          saleGetCategory(category_id: \"${params.categoryId}\") {\n            status\n            message\n            success\n            data\n          }\n        }\n      `,\n    };\n    GRAPHQL.doQuery(query)\n    .then(response => {\n      try {\n        return callback({\n          status: 1,\n          data: JSON.parse(response.data.saleGetCategory.data)\n        })\n      } catch (e) {\n        return callback({ status: 0, message: \"HTTPERROR\" })\n      }\n    })\n    .catch(error => {\n      return callback({ status: 0, message: error })\n    })\n  }\n  \n  static postCategory(data,callback) {\n    console.log('postCategoryData...req',data)\n    const query = {\n      mutation: gql`\n          mutation{\n            salePostCateogry(\n              prodcat_id:\"${data.prodcatId}\",\n              prodcat_parent:\"${data.prodcatParent}\", \n              prodcat_active: ${data.prodcatActive}, \n              prodcat_image: \"${data.prodcatImage}\",\n              prodcat_featured: ${data.prodcatFeatured}, \n              prodcat_identifier:\"${data.prodcatIdentifier}\",\n              prodcat_display_order: ${data.prodcatDisplayOrder},                        \n              lang_data:${data.langData}\n            ) {\n              status\n              message\n              success\n              data\n            }\n          }\n        `\n    }\n    GRAPHQL.doMutate(query)\n      .then(response => {\n        console.log(\"response....\",response)\n        try {\n          return callback({\n            status: 1,\n            data: JSON.parse(response.data.salePostCateogry.data)\n          })\n        } catch (e) {\n          console.log(\"e on mutate...\",e)\n          return callback({ status: 0, message: e.Message })\n        }\n      })\n      .catch(error => {\n        return callback({ status: 0, message: error })\n      })\n  }\n\n\n  static deleteCategory(id,callback) {\n    const query = {\n      mutation: gql`\n          mutation{\n            saleDeleteCategory(\n              prodcat_id:\"${id}\"\n            ) {\n              status\n              message\n              success\n              data\n            }\n          }\n        `\n    }\n\n    GRAPHQL.doMutate(query)\n      .then(response => {\n        console.log(\"response....\",response)\n        try {\n          return callback({\n            status: 1,\n            data: JSON.parse(response.data.saleDeleteCategory.data)\n          })\n        } catch (e) {\n          console.log(\"e on mutate...\",e)\n          return callback({ status: 0, message: e.Message })\n        }\n      })\n      .catch(error => {\n        return callback({ status: 0, message: error })\n      })\n  }\n\n \n}\n","import gql from 'graphql-tag';\nimport GRAPHQL from './index'\n\n\nexport default class {\n  \n  \n  static getProductOptions(callback) {\n    const query = {\n      query: gql`\n        {\n          saleGetProductOptions {\n          status\n          message\n          success\n          data\n        }\n       }`\n    }\n\n    GRAPHQL.doQuery(query)\n      .then(response => {\n        try {\n          return callback({\n            status: 1,\n            data: JSON.parse(response.data.saleGetProductOptions.data)\n          })\n        } catch (e) {\n          return callback({ status: 0, message: \"HTTPERROR\" })\n        }\n      })\n      .catch(error => {\n        return callback({ status: 0, message: error })\n      })\n  }\n\n\n  static postProductOption(data,callback) {\n    \n    const query = {\n      mutation: gql`\n          mutation{\n            salePostProductOption(        \n              option_id:\"${data._id?data._id:''}\", \n              option_seller_id: \"\",\n              option_identifier: \"${data.option_identifier}\",\n              lang_data: ${data.lang_data},\n            ){\n              status\n              message\n              success\n              data\n            }\n          }\n        `\n    }\n    GRAPHQL.doMutate(query)\n      .then(response => {\n        try {\n          return callback({\n            status: 1,\n            data: JSON.parse(response.data.salePostProductOption.data)\n          })\n        } catch (e) {\n          return callback({ status: 0, message: e.Message })\n        }\n      })\n      .catch(error => {\n        return callback({ status: 0, message: error })\n      })\n  }\n\n\n  static deleteProductOption(option_id,callback) {\n    const query = {\n      mutation: gql`\n          mutation{\n            saleDeleteProductOption(\n              option_id:\"${option_id}\"\n            ) {\n              status\n              message\n              success\n              data\n            }\n          }\n        `\n    }\n\n    GRAPHQL.doMutate(query)\n      .then(response => {\n        try {\n          return callback({\n            status: 1,\n            data: JSON.parse(response.data.saleDeleteProductOption.data)\n          })\n        } catch (e) {\n          return callback({ status: 0, message: e.Message })\n        }\n      })\n      .catch(error => {\n        return callback({ status: 0, message: error })\n      })\n  }\n\n \n}\n","import React, { Component, Fragment } from \"react\";\nimport IntlMessages from \"../../../helpers/IntlMessages\";\nimport { Colxx, Separator } from \"../../../components/common/CustomBootstrap\";\nimport Breadcrumb from \"../../../containers/navs/Breadcrumb\";\nimport Select from \"react-select\";\nimport 'react-tabs/style/react-tabs.css';\nimport {\n  Row,\n  Card,\n  CardBody,\n  Input,\n  Button,\n  Label,\n  CustomInput,\n  Form\n} from \"reactstrap\";\nimport \"react-tagsinput/react-tagsinput.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"rc-switch/assets/index.css\";\nimport \"rc-slider/assets/index.css\";\nimport \"react-rater/lib/react-rater.css\";\nimport AsyncSelect from 'react-select/async'\nimport CustomSelectInput from \"../../../components/common/CustomSelectInput\";\nimport moment from \"moment\";\nimport ProductService from '../../../service/graphql/Product'\nimport BrandService from '../../../service/graphql/Brand'\nimport CategoryService from '../../../service/graphql/Category'\nimport { NotificationManager } from \"../../../components/common/react-notifications\";\nimport {plainListToGql,gqlToLanguageOptions,getDefaultLanguageOptions} from '../../../libs/converter'\nimport ProductOptionService from '../../../service/graphql/ProductOption'\nimport LanguageSelector from '../../../components/LanguageSelector'\nimport Config from '../../../service/api/config'\n\n// const selectData = [\n//   { label: \"Cake\", value: \"cake\", key: 0 },\n//   { label: \"Cupcake\", value: \"cupcake\", key: 1 },\n//   { label: \"Dessert\", value: \"dessert\", key: 2 }\n// ];\n\n\nexport default class BlankPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedOption: \"\",\n      selectedCategory:'',\n      selectedOptionLabelOver: \"\",\n      selectedOptionLabelTop: \"\",\n      startDate: null,\n      startDateLabelOver: null,\n      startDateLabelTop: null,\n      startDateTime: null,\n      startDateRange: null,\n      endDateRange: null,\n      embeddedDate: moment(),\n      tags: [],\n      tagsLabelOver: [],\n      tagsLabelTop: [],\n      selectedProductId:null,\n      operatorOptions:[],\n      selectedItem:{\n        product_type:\"Physical\"\n      },\n      langs:[],\n      langOptions:[],\n      selectedLangIndex:0,\n      brandOptions:[],\n      editState:false,\n      productOptionOptions:[],\n      selectData:[],\n      categoryOptions:[],\n      selectedCategories:''\n    };\n  }\n  handleChangeLabelOver = selectedOptionLabelOver => {\n    this.setState({ selectedOptionLabelOver });\n  };\n  \n  getProductOption = ()=>{\n    ProductOptionService.getProductOptions(response=>{\n      if(response.status === 1){\n        this.setState({\n          productoptions:response.data.results,\n          currentPage:response.data.page,\n        })\n        let tempOptions = []\n        response.data.results.forEach((item)=>{\n            let temp = {\n              label:item.option_identifier,\n              value:item._id,\n              key:item.option_identifier\n            }\n            tempOptions.push(temp)\n            this.setState({selectData:tempOptions})\n        })\n        // const selectData = [\n        //   { label: \"Cake\", value: \"cake\", key: 0 },\n        //   { label: \"Cupcake\", value: \"cupcake\", key: 1 },\n        //   { label: \"Dessert\", value: \"dessert\", key: 2 }\n        // ];\n        \n\n      }\n  })\n  }\n  getListCategories = ()=>{\n    var listCategories = [];\n      const params = {\n        parentId:\"\",\n        keyword:\"\",\n        langCode: \"en\"\n      };\n    CategoryService.getListCategories(params,response=>{\n      if (response.status === 1) {\n        const optionsTmp = []\n        listCategories= response.data\n        listCategories.forEach(element => {\n          const obj = {\n            label:element.name,\n            value:element.prodcat_id,\n            id:element.prodcat_id,\n          }\n          optionsTmp.push(obj)\n        });\n        this.setState({categoryOptions:optionsTmp})\n        if(this.state.selectedCategory){\n          console.log('selectedCategory...',this.state.selectedCategory)\n          this.getCategoryList(this.getSelectedCategory(this.state.selectedCategory))\n          this.setState({selectedCategories:this.getSelectedCategory(this.state.selectedCategory)})\n\n        }\n      } else {\n      }\n    })\n  }\ngetBrands = ()=>{\n  BrandService.getBrandsForSelector(response=>{\n    if(response.status === 1){\n      const brands = response.data.results\n      const tempOptions = []\n      brands.forEach(element => {\n          const obj = {\n            label:element.brand_identifier,\n            value:element._id,\n            id:element._id,\n          }\n          tempOptions.push(obj)\n      });\n      this.setState({brandOptions:tempOptions})\n    }\n  })\n}\nloadBrandOptions=(inputValue, callback)=>{\n  BrandService.getBrandsForSelector(response=>{\n    if(response.status === 1){\n        const brands = response.data.results\n        const tempOptions = []\n        brands.forEach(element => {\n            const obj = {\n              label:element.brand_identifier,\n              value:element._id,\n              id:element._id,\n            }\n            tempOptions.push(obj)\n        });\n        this.setState({brandOptions:tempOptions})\n        setTimeout(() => {\n          callback(this.filterBrands(inputValue));\n        }, 1000);\n      }\n  })\n};\nfilterBrands = (inputValue: string) => {\n  const {brandOptions}= this.state\n  return brandOptions.filter((i) =>\n    i.label.toLowerCase().includes(inputValue.toLowerCase())\n  );\n};\n  componentDidMount(){\n    this.setState({editState:false})\n    this.getBrands()\n    this.getProductOption()\n    this.getListCategories()\n    this.setState({selectedProductId:this.props.match.params.id})\n    if(this.props.match.params.id &&  this.props.match.params.id!==\"0\"){\n      ProductService.getProduct(this.props.match.params.id,(res)=>{\n        console.log('saleGetProduct.data...3', res.data)\n        if(res.data){\n          this.setState({selectedItem:res.data})\n          this.setState({langOptions:gqlToLanguageOptions(res.data.langs?res.data.langs:'',\"product_label\")})\n          this.setState({selectedOptions:this.getInitialSelectedOptions(res.data.options)})\n          this.setState({selectedCategories:this.getSelectedCategory(res.data.categories?res.data.categories:[])})\n          this.setState({selectedCategory:res.data.categories?res.data.categories:[]})\n\n          this.getOptionList(this.getInitialSelectedOptions(res.data.options))\n          this.getCategoryList(this.getSelectedCategory(res.data.categories?res.data.categories:[]))\n        }\n      })\n     }\n    else{\n        // this.setState({selectedItem:{}})\n        this.initializeSelectedItem()\n        getDefaultLanguageOptions((options)=>{\n            this.setState({langOptions:options})\n        })\n      \n    }    \n  }\n  getInitialSelectedOptions(optionArray){\n    let tempOptions = []\n    optionArray.forEach(element => {\n      let temp = {\n        label:element.option_identifier,\n        value:element.option_id,\n        key:element.option_id\n      }\n      tempOptions.push(temp)\n    });\n    return tempOptions;\n  }\n  getSelectedCategory(option){\n    const {categoryOptions}=this.state\n    let tempOptions = []\n    console.log('categoryOptions...1',categoryOptions)\n    console.log('option...1',option)\n    const temp = categoryOptions.find((item)=>{\n      return(\n        item.id===option[0].prodcat_id\n        )\n    })\n    tempOptions.push(temp)\n    console.log('tempOptions...',tempOptions)\n    return tempOptions;\n  }\n  initializeSelectedItem(){\n    const {selectedItem} = this.state\n    selectedItem.product_identifier = \"\"\n    selectedItem.product_dismension_unit = \"\"\n    selectedItem.product_weight_unit = \"\"\n    selectedItem.product_width = \"\"\n    selectedItem.product_length = \"\"\n    selectedItem.product_height = \"\"\n    selectedItem.product_weight = \"\"\n    selectedItem.product_description = \"\"\n    selectedItem.product_type = \"Physical\"\n    selectedItem.product_brand_id = null\n    selectedItem.product_image = \"\"\n    this.setState({selectedItem})\n  }\n  componentWillReceiveProps(nextProps){\n    \n    if(nextProps.match.params.id===\"0\"){\n      console.log(\"renewed....\")\n      this.initializeSelectedItem()\n      // const {selectedItem} = this.state\n      // selectedItem.product_identifier = \"\"\n      // selectedItem.product_dismension_unit = \"\"\n      // selectedItem.product_weight_unit = \"\"\n      // selectedItem.product_width = \"\"\n      // selectedItem.product_length = \"\"\n      // selectedItem.product_height = \"\"\n      // selectedItem.product_weight = \"\"\n      // selectedItem.product_description = \"\"\n      // selectedItem.product_type = \"Physical\"\n      // selectedItem.product_brand_id = null\n      // selectedItem.product_image = \"\"\n      // this.setState({selectedItem})\n    }\n  }\n  onChangeProperty(value,type){\n    const {selectedItem} = this.state\n    \n    if(type===\"product_image\"){\n      this.setState({editState:true})\n      let reader = new FileReader();\n      reader.readAsDataURL(value);\n      reader.onloadend = () => {\n        selectedItem[type] = reader.result\n        // console.log(\"value on product_image--->>>\", reader.result)\n        this.setState({selectedItem})          \n      };\n    }else{\n      selectedItem[type] = value\n      this.setState({selectedItem})\n    }\n\n\n  }\n  getSelectedOption(value){\n    \n    const found = this.state.brandOptions.find((item)=>{\n       return(\n         item.value === value\n       )\n     })\n     return found;\n\n }\n  onChangeName(value){\n    const {selectedLangIndex} = this.state\n    const selectedLangOption = this.state.langOptions[selectedLangIndex];\n    selectedLangOption.title = value\n    this.setState({langOptions:[...this.state.langOptions]})\n  }\n  addNewInstance(){\n    // this.props.history.push(\"/app/products/products\");\n\n    const {selectedItem,editState} = this.state\n    if((selectedItem.product_identifier === undefined || selectedItem.product_identifier.length === 0) ||\n        (selectedItem.product_brand_id === undefined || selectedItem.product_brand_id.length === 0)\n    ){\n      NotificationManager.error(\n        \"Error message\",\n        \"Please confirm valid data!\",\n        3000,\n        () => {\n          // alert(\"callback\");\n        },\n        null,\n        \"error\"\n      );\n      return;\n    }\n    console.log(\"edit_state..... \", editState)\n    if(!editState){\n      selectedItem.product_image = \"\"\n    }\n    let templangData = plainListToGql(this.state.langOptions)\n    this.state.selectedItem.lang_data = templangData\n    \n    ProductService.postProduct(this.state.selectedItem,(error,res)=>{\n      this.props.history.push(\"/app/products/products\");\n      })\n    }\n    updateCheckBox(field){\n      let {selectedItem} = this.state\n      selectedItem[field] = !selectedItem[field]\n      this.setState({selectedItem})\n   }\n   handleChangeMulti = selectedOptions => {\n    this.setState({ selectedOptions });\n    if(selectedOptions && selectedOptions.length>0){\n      this.getOptionList(selectedOptions)\n    }else{\n      this.state.selectedItem.product_options = null\n      this.setState({selectedItem:this.state.selectedItem})\n    }\n  };\n  handleChangeCategories = selectedCategories => {\n    this.setState({ selectedCategories });\n    if(selectedCategories && selectedCategories.length>0){\n      this.getCategoryList(selectedCategories)\n    }else{\n      this.state.selectedItem.product_options = null\n      this.setState({selectedItem:this.state.selectedItem})\n    }\n  }\n   getOptionList(selectedOptions){\n    // product_options\n    let tempOptions = []\n    selectedOptions.forEach((option)=>{\n      tempOptions.push('\"'+option.value+'\"')\n    })\n    let tempOptionString = tempOptions.join(\",\")\n    let finalStr = \"[\" + tempOptionString + ']'\n    this.state.selectedItem.product_options = finalStr\n   }\n   getCategoryList(selectedCategories){\n    // product_options\n    let tempOptions = []\n    selectedCategories.forEach((option)=>{\n      tempOptions.push('\"'+option.value+'\"')\n    })\n    let tempOptionString = tempOptions.join(\",\")\n    let finalStr = \"[\" + tempOptionString + ']'\n    this.state.selectedItem.categories = finalStr\n   }\n    handleSubmit(e){\n      e.stopPropagation();\n      e.preventDefault();\n      this.setState({isSubmitting:true})\n      const {selectedItem} = this.state\n      if(!selectedItem.product_brand_id || !selectedItem.product_options){\n          return;\n      }\n      this.addNewInstance()\n    }\n    render() {\n      const {selectedProductId,selectedItem,editState,selectData, isSubmitting} = this.state\n        return (\n            <Fragment>\n              <Row>\n                <Colxx xxs=\"12\">\n                  <Breadcrumb heading={selectedProductId==='0'?\"New Product\":\"Product Detail\"} match={this.props.match} />\n                  <Separator className=\"mb-5\" />\n                </Colxx>\n              </Row>\n              <Form onSubmit={this.handleSubmit.bind(this)}>\n              <Row className=\"mb-4\">\n                <Colxx xxs=\"12\" md=\"12\">\n                  <Card>\n                    <CardBody className=\"d-flex\">\n                      <div className=\"flex-1\">\n                        <Label  className=\"mt-4\">\n                            Identifier\n                        </Label>\n                        <Input required  onChange={(e)=>{this.onChangeProperty(e.target.value,'product_identifier')}} value={selectedItem.product_identifier}/>\n                        <Label className=\"mt-4\">\n                            Dimension Unit\n                        </Label>\n                        <Input  required onChange={(e)=>{this.onChangeProperty(e.target.value,'product_dismension_unit')}} value={selectedItem.product_dismension_unit}/>\n                        <Label className=\"mt-4\">\n                            Weight Unit\n                        </Label>\n                        <Input required  onChange={(e)=>{this.onChangeProperty(e.target.value,'product_weight_unit')}} value={selectedItem.product_weight_unit}/>\n                        <Label className=\"mt-4\">\n                            Width\n                        </Label>\n                        <Input required  onChange={(e)=>{this.onChangeProperty(e.target.value,'product_width')}} value={selectedItem.product_width}/>\n                        \n                        <Label className=\"mt-4\">\n                            Length\n                        </Label>\n                        <Input required onChange={(e)=>{this.onChangeProperty(e.target.value,'product_length')}} value={selectedItem.product_length}/>\n                        <Label className=\"mt-4\">\n                            Height\n                        </Label>\n                        <Input required  onChange={(e)=>{this.onChangeProperty(e.target.value,'product_height')}} value={selectedItem.product_height}/>\n                        <Label className=\"mt-4\">\n                            Weight\n                        </Label>\n                        <Input required onChange={(e)=>{this.onChangeProperty(e.target.value,'product_weight')}} value={selectedItem.product_weight}/>\n                        <Label className=\"mt-4\">\n                            Description\n                        </Label>\n                        <Input  onChange={(e)=>{this.onChangeProperty(e.target.value,'product_description')}} value={selectedItem.product_description}/>\n                        <Label className=\"mt-4\">\n                            Brand\n                        </Label>\n                        <AsyncSelect\n                            components={{ Input: CustomSelectInput }}\n                            className=\"react-select\"\n                            name=\"form-field-name\"\n                            loadOptions={this.loadBrandOptions}\n                            defaultOptions\n                            value={this.getSelectedOption(selectedItem.product_brand_id)}\n                            onChange={(e)=>{this.onChangeProperty(e.value,'product_brand_id')}}\n                            onInputChange={this.handleInputChange}\n                        />\n                         {\n                          isSubmitting && !selectedItem.product_brand_id &&\n                          <div className=\"invalid-feedback d-block\">\n                                {\"Brand required!\"}\n                          </div>\n                        }\n                        \n                        <div className=\"d-flex\">\n                          <Button color=\"primary\" className=\"mt-4 mr-4\" type=\"submit\">\n                            <IntlMessages id=\"forms.submit\" />\n                          </Button>\n                          <Button color=\"primary\" className=\"mt-4\" onClick={()=>{\n                              this.props.history.push(\"/app/products/products\");\n                          }}>\n                             Close\n                          </Button>\n                        </div>\n                      </div>\n                      <div  className=\"flex-1\">\n                      <Label className=\"mt-4\">\n                            Product Option\n                        </Label>\n                        <Select\n                          components={{ Input: CustomSelectInput }}\n                          className=\"react-select\"\n                          classNamePrefix=\"react-select\"\n                          isMulti\n                          name=\"form-field-name\"\n                          value={this.state.selectedOptions}\n                          onChange={this.handleChangeMulti}\n                          options={this.state.selectData}\n                        />\n                        {\n                          isSubmitting && !selectedItem.product_options &&\n                          <div className=\"invalid-feedback d-block\">\n                                {\"Options required!\"}\n                          </div>\n                        }\n                        <Label className=\"mt-4\">\n                            Category Option\n                        </Label>\n                        <Select\n                          components={{ Input: CustomSelectInput }}\n                          className=\"react-select\"\n                          classNamePrefix=\"react-select\"\n                          isMulti\n                          name=\"form-field-name\"\n                          value={this.state.selectedCategories}\n                          onChange={this.handleChangeCategories}\n                          options={this.state.categoryOptions}\n                        />\n                        {\n                          isSubmitting && !selectedItem.categories &&\n                          <div className=\"invalid-feedback d-block\">\n                                {\"Options required!\"}\n                          </div>\n                        }\n                        {/* {this.renderLanguageSetting()} */}\n                        <Label className=\"mt-4\">\n                            Image\n                        </Label>\n                        <CustomInput\n                          type=\"file\"\n                          id=\"exampleCustomFileBrowser1\"\n                          name=\"customFile\"\n                          // onChange={this.setImage}\n                          onChange={(e)=>{this.onChangeProperty(e.target.files[0],'product_image')}}\n                        />\n                        {\n                          (selectedItem._id && selectedItem.product_image && !editState) &&\n                        // <div>need to show images</div>\n                            <img className=\"shop-image\" src={Config.BACKEND_API_URL+ selectedItem.product_image}/> \n                        }\n                        {\n                          editState && <img className=\"shop-image\" src={selectedItem.product_image}/>\n                        }\n                        {/* {\n                          !selectedItem._id && selectedItem.product_image && \n                          // eslint-disable-next-line jsx-a11y/alt-text\n                          <img className=\"product-image\" src={selectedItem.product_image}/>\n                        } */}\n                        <LanguageSelector \n                          langOptions={this.state.langOptions} \n                          onChangeName={this.onChangeName.bind(this)}\n                          selectedLangIndex = {this.state.selectedLangIndex}\n                          onChangeTab = {(index)=>{this.setState({selectedLangIndex:index})}}\n                        />\n                        <div style={{display:'flex',flexDirection:'column',marginBottom:20}}>\n                          <Label className=\"mt-4\">\n                              Product Type\n                          </Label>\n                          <CustomInput\n                            type=\"radio\"\n                            name=\"radiusRadio\"\n                            className=\"mt-2\"\n                            id=\"rounded\"\n                            label=\"Physical\"\n                            inline\n                            checked={selectedItem.product_type===\"Physical\"}\n                            defaultChecked={true}\n                            onChange={() => {this.onChangeProperty('Physical','product_type')}}\n                          />\n                          <CustomInput\n                            type=\"radio\"\n                            name=\"radiusRadio\"\n                            className=\"mt-2\"\n                            id=\"rounded2\"\n                            label=\"Digital\"\n                            inline\n                            defaultChecked={false}\n                            checked={selectedItem.product_type===\"Digital\"}\n                            onChange={() => {this.onChangeProperty(\"Digital\",'product_type')}}\n                          />\n                        </div>\n                         <CustomInput\n                            className=\"mt-2\"\n                            type=\"checkbox\"\n                            id=\"box1\"\n                            label=\"Added by admin?\"\n                            checked={selectedItem.product_added_by_admin_id}\n                            onChange = {(e)=>{this.updateCheckBox(\"product_added_by_admin_id\")}}\n                        />\n                        <CustomInput\n                            className=\"mt-2\"\n                            type=\"checkbox\"\n                            id=\"box2\"\n                            label=\"Approved?\"\n                            checked={selectedItem.product_approved}\n                            onChange = {(e)=>{this.updateCheckBox(\"product_approved\")}}\n                        />\n                      </div>\n                      \n                  </CardBody>\n                </Card>\n              </Colxx>\n            </Row>\n              </Form>\n          </Fragment>\n        )\n    }\n}\n","import React from 'react';\nimport { Col } from 'reactstrap';\nconst Colxx = (props) => (\n    <Col {...props} widths={['xxs', 'xs', 'sm', 'md', 'lg', 'xl', 'xxl']} />\n);\nconst Separator = (props) => (\n    <div className={`separator ${props.className}`}></div>\n);\nexport { Colxx,Separator }","import ApolloClient from 'apollo-boost'\nimport Config from '../api/config'\nconst API_URL = Config.BACKEND_API_URL + '/graphql';\nexport default class {\n  static doQuery(query) {\n     \n      const client = new ApolloClient({\n        uri: API_URL,\n        headers: {\n          Authorization: '(H+KbPeShVmYq3t6w9z$C&F)J@NcQfTjWnZr4u7x!A%D*G-KaPdSgUkXp2s5v8y/'\n        }\n      })\n\n      return client.query(query)\n        .then(response => {\n          return response\n        })\n        .catch(error => {\n          if(error.graphQLErrors){\n            return error.graphQLErrors\n          }\n          return \"HTT_ERROR\"\n        })\n    \n  }\n\n  static doMutate(query) {\n   \n      const client = new ApolloClient({\n        uri: API_URL,\n        headers: {\n          Authorization: '(H+KbPeShVmYq3t6w9z$C&F)J@NcQfTjWnZr4u7x!A%D*G-KaPdSgUkXp2s5v8y/'\n        }\n      })\n\n      return client.mutate(query)\n        .then(response => {\n          return response\n        })\n        .catch(error => {\n          if(JSON.stringify(error).indexOf('Invalid nonce') > -1){\n            return error.graphQLErrors[0].message\n          }\n          if(error.graphQLErrors){\n            return error.graphQLErrors\n          }\n          return \"NETWORK_ERROR\"\n        })\n  \n  }\n}\n","import React, { Fragment } from \"react\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport IntlMessages from \"../../helpers/IntlMessages\";\n\nconst getMenuTitle = sub => {\n  return <IntlMessages id={`menu.${sub}`} />;\n};\n\nconst getUrl = (path, sub, index) => {\n  if (index === 0) {\n    return \"\";\n  } else {\n    return path.split(sub)[0] + sub;\n  }\n};\n\nconst BreadcrumbContainer = ({ heading, match }) => {\n  return (\n    <Fragment>\n      {heading && <h1><IntlMessages id={heading}/></h1>}\n      <BreadcrumbItems match={match} />\n    </Fragment>\n  );\n};\n\nexport const BreadcrumbItems = ({ match }) => {\n  const path = match.path.substr(1);\n  let paths = path.split(\"/\");\n  if (paths[paths.length - 1].indexOf(\":\") > -1) {\n    paths = paths.filter(x => x.indexOf(\":\") === -1);\n  }\n  return (\n    <Fragment>\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\n        {paths.map((sub, index) => {\n          return (\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\n              {paths.length !== index + 1 ? (\n                <NavLink to={\"/\" + getUrl(path, sub, index)}>\n                  {getMenuTitle(sub)}\n                </NavLink>\n              ) : (\n                getMenuTitle(sub)\n              )}\n            </BreadcrumbItem>\n          );\n        })}\n      </Breadcrumb>\n    </Fragment>\n  );\n};\n\nexport default BreadcrumbContainer;\n","import Notifications from './Notifications.js';\nimport NotificationContainer from './NotificationContainer';\nimport NotificationManager from './NotificationManager';\n\nexport { Notifications, NotificationContainer, NotificationManager };\nexport default Notifications;\n","\nconst TEST_MODE=1\nconst CURRENT_MODE = TEST_MODE\n\nclass Config {\n    constructor() {\n        this.config = {}\n        this.configReady = false;\n        if(CURRENT_MODE===TEST_MODE){\n            this.COVID_API_URL = \"https://api.testenv.sharetoken.io/covid\"\n            this.AUTH_API_URL = \"https://api.testenv.sharetoken.io/auth\"\n            this.BACKEND_API_URL = \"https://api.testenv.sharetoken.io\"\n        }\n    }\n}\n\nexport default (new Config);\n","import React from \"react\";\nimport { components } from \"react-select\";\n\nconst CustomSelectInput = props => {\n  var customProps = Object.assign({}, props);\n  delete customProps.autoCorrect;\n  delete customProps.autoCapitalize;\n  return <components.Input {...customProps} />;\n};\n\nexport default CustomSelectInput\n","import React, { Component } from 'react';\nimport memoizeOne from 'memoize-one';\nimport { CacheProvider } from '@emotion/core';\nimport 'react-dom';\nimport 'prop-types';\nimport './utils-06b0d5a4.browser.esm.js';\nexport { y as components } from './index-4322c0ed.browser.esm.js';\nimport { S as Select } from './Select-9fdb8cd0.browser.esm.js';\nexport { c as createFilter, a as defaultTheme, m as mergeStyles } from './Select-9fdb8cd0.browser.esm.js';\nimport '@emotion/css';\nimport 'react-input-autosize';\nimport { m as manageState } from './stateManager-04f734a2.browser.esm.js';\nimport createCache from '@emotion/cache';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar NonceProvider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(NonceProvider, _Component);\n\n  function NonceProvider(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n\n    _this.createEmotionCache = function (nonce) {\n      return createCache({\n        nonce: nonce\n      });\n    };\n\n    _this.createEmotionCache = memoizeOne(_this.createEmotionCache);\n    return _this;\n  }\n\n  var _proto = NonceProvider.prototype;\n\n  _proto.render = function render() {\n    var emotionCache = this.createEmotionCache(this.props.nonce);\n    return React.createElement(CacheProvider, {\n      value: emotionCache\n    }, this.props.children);\n  };\n\n  return NonceProvider;\n}(Component);\n\nvar index = manageState(Select);\n\nexport default index;\nexport { NonceProvider };\n","import LanguageService from '../service/graphql/Language'\n\nexport const plainListToGql = (options)=>{\n    let tempOptions = \"[\"\n    options.forEach(option => {\n        let objectStr = \"{\"\n        for(const key in option){\n           objectStr += `${key}:\"${option[key]}\",`\n        }\n        let extractedObjStr = objectStr.slice(0,-1) + \"}\"\n        tempOptions += extractedObjStr + \",\"\n    });\n     return tempOptions.slice(0,-1) + \"]\"\n}\n\nexport const gqlToLanguageOptions = (languageList, fieldName)=>{\n\n    let langOptions = []\n    languageList.forEach(lang => {\n        const tempOption = {\n            lang_code:lang.lang_code,\n            title: lang[fieldName],\n        }\n        langOptions.push(tempOption)\n    });\n    // this.setState({langOptions:langOptions})\n    return langOptions\n}\n\nexport const getDefaultLanguageOptions=(cb)=>{\n    let options =[]\n    LanguageService.getLanguages(response=>{\n        if(response.status === 1){\n            response.data.langs.forEach(lang => {\n                    const tempOption = {\n                        lang_code:lang.lang_code,\n                        title:\"\"\n                    }\n                    options.push(tempOption)\n                    cb(options)\n            });\n        }\n    })\n}\n\n// export const getSelectedOption = (value)=>{\n//     const found = operatorOptions.find((item)=>{\n//        return(\n//          item.value === value\n//        )\n//      })\n//      return found;\n//  }","import React from 'react'\nimport {Input,Label} from \"reactstrap\";\nimport { Tab, Tabs, TabList} from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\n\nconst LanguageSelector = ({langOptions,onChangeName,selectedLangIndex, onChangeTab})=>{\n    return(\n        <div className=\"language-cover\">\n            <Label>\n                Languages \n            </Label>\n            <Tabs selectedIndex={selectedLangIndex}  onSelect={(index)=>{onChangeTab(index)}}>\n            <TabList>\n                {\n                   langOptions.map((lang,idx)=>{\n                    return(\n                    <Tab key={idx}>{lang.lang_code}</Tab>\n                    )\n                })\n                }\n                \n            </TabList>\n            </Tabs>\n            <Input  onChange={(e)=>{onChangeName(e.target.value)}} value={langOptions[selectedLangIndex]?.title}/>\n        </div>\n    )\n    \n}\nexport default LanguageSelector","import LanguageSelector from './LanguageSelector'\n\nexport default LanguageSelector","import gql from 'graphql-tag';\nimport GRAPHQL from './index'\nimport moment from 'moment'\n\nexport default class {\n  \n  \n  static getLanguages(callback) {\n    const query = {\n      query: gql`\n        {\n          saleGetShopLangs {\n          status\n          message\n          success\n          data\n        }\n       }`\n    }\n\n    GRAPHQL.doQuery(query)\n      .then(response => {\n        try {\n          return callback({\n            status: 1,\n            data: JSON.parse(response.data.saleGetShopLangs.data)\n          })\n        } catch (e) {\n          return callback({ status: 0, message: \"HTTPERROR\" })\n        }\n      })\n      .catch(error => {\n        return callback({ status: 0, message: error })\n      })\n  }\n\n\n  static postLanguage(data,callback) {\n    const query = {\n      mutation: gql`\n          mutation{\n            salePostShopLang(\n              lang_code:\"${data.lang_code?data.lang_code:''}\",\n              lang_name: \"${data.lang_name}\"\n            ) {\n              status\n              message\n              success\n              data\n            }\n          }\n        `\n    }\n    GRAPHQL.doMutate(query)\n      .then(response => {\n        try {\n          return callback({\n            status: 1,\n            data: JSON.parse(response.data.salePostShopLang.data)\n          })\n        } catch (e) {\n          return callback({ status: 0, message: e.Message })\n        }\n      })\n      .catch(error => {\n        return callback({ status: 0, message: error })\n      })\n  }\n\n\n  static deleteLanguage(lang_code,callback) {\n    const query = {\n      mutation: gql`\n          mutation{\n            saleDeleteShopLang(\n              lang_code:\"${lang_code}\"\n            ) {\n              status\n              message\n              success\n              data\n            }\n          }\n        `\n    }\n\n    GRAPHQL.doMutate(query)\n      .then(response => {\n        try {\n          return callback({\n            status: 1,\n            data: JSON.parse(response.data.saleDeleteShopLang.data)\n          })\n        } catch (e) {\n          return callback({ status: 0, message: e.Message })\n        }\n      })\n      .catch(error => {\n        return callback({ status: 0, message: error })\n      })\n  }\n\n \n}\n"],"sourceRoot":""}