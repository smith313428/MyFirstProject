{"version":3,"sources":["service/api/api.js","views/user/login.js","components/common/CustomBootstrap.js","helpers/IntlMessages.js","components/common/react-notifications/index.js","service/api/config.js"],"names":["baseApi","sub_url","method","json_data","type","cb","authToken","localStorage","request","headers","Accept","Authorization","JSON","stringify","base_url","Config","AUTH_API_URL","COVID_API_URL","fetch","response","json","responseJson","status","init","email","password","login","err","user","this","res","console","log","getIssuers","page","size","enRollIssuer","id","revokeIssuer","getPrefunds","Login","Component","constructor","props","super","onUserLogin","values","api","a","loginUser","history","data","validateEmail","value","error","validatePassword","length","state","wrongCredential","componentDidUpdate","NotificationManager","warning","render","initialValues","className","xxs","md","onSubmit","errors","touched","name","validate","color","loading","style","marginTop","connect","authUser","Colxx","widths","Separator","injectIntl","withRef","Notifications","config","configReady","BACKEND_API_URL"],"mappings":"qJAEe,KACPA,QAAN,CAAcC,EAASC,EAAQC,EAAWC,EAAO,QAASC,IAAI,yHACxDC,EAAYC,aAAa,cAD+B,SAItDC,EAAU,CACZN,SACAO,QAAS,CACPC,OAAQ,mBACR,eAAgB,mBAChBC,cAAeL,EAAY,UAAYA,EAAY,OAGzC,QAAVJ,GAA8B,OAAVA,IACtBM,EAAO,KAAWI,KAAKC,UAAUV,IAE7BW,EACI,QAARV,EAAiBW,IAAOC,aAAeD,IAAOE,cAhBU,SAiBrCC,MAAMJ,EAAWb,EAASO,GAjBW,cAiBtDW,EAjBsD,iBAkBjCA,EAASC,OAlBwB,QAkBtDC,EAlBsD,OAmBtDF,EAASG,QAAU,KAAOH,EAASG,OAAS,IAC9CjB,GAAMA,EAAG,KAAMgB,GAEfhB,GAAMA,EAAGgB,EAAc,MAtBiC,kDAyB1DhB,GAAMA,EAAG,EAAD,GAAQ,MAzB0C,4DA6BxDkB,KAAKlB,GAAK,IAAD,0HACTmB,EAAQjB,aAAaiB,OACrBC,EAAWlB,aAAakB,UAE1B,EAAKC,MAAMF,EAAOC,EAAU,CAACE,EAAKC,KAChCvB,EAAGsB,EAAKC,KAGVvB,EAAG,MARQ,8CAYfqB,MAAMF,EAAOC,EAAUpB,GACrBwB,KAAK7B,QAAQ,SAAU,OAAQ,CAAEwB,QAAOC,YAAY,OAAQ,CAACE,EAAKG,KACrD,MAAPH,GACFI,QAAQC,IAAI,kBAEd3B,EAAGsB,EAAKG,MAGZG,WAAWC,EAAMC,EAAM9B,GACrBwB,KAAK7B,QAAL,+BAC0BkC,EAD1B,iBACuCC,GACrC,MACA,GACA,QACA9B,IAGJ+B,aAAaC,EAAIhC,GACfwB,KAAK7B,QAAL,yBAA+BqC,EAA/B,WAA4C,MAAO,GAAI,QAAShC,IAElEiC,aAAaD,EAAIhC,GACfwB,KAAK7B,QAAL,yBAA+BqC,EAA/B,WAA4C,MAAO,GAAI,QAAShC,IAElEkC,YAAYL,EAAMC,EAAM9B,GACtBwB,KAAK7B,QAAL,+BAC0BkC,EAD1B,iBACuCC,GACrC,MACA,GACA,GACA9B,M,mMC/DN,MAAMmC,UAAcC,YAClBC,YAAYC,GAAQ,IAAD,EACjBC,MAAMD,GADW,YASnBE,YAAeC,IACbC,IAAIrB,MAAMoB,EAAOtB,MAAOsB,EAAOrB,SAA/B,+BAAAuB,EAAA,MAAyC,WAAOrB,EAAKG,GAAZ,SAAAkB,EAAA,sDACnCrB,IACFI,QAAQC,IAAI,mBAAiBF,GAC7B,EAAKa,MAAMM,UAAUH,EAAQ,EAAKH,MAAMO,SACxC3C,aAAa,cAAgBuB,EAAIqB,MAJI,2CAAzC,0DAViB,KAmBnBC,cAAiBC,IACf,IAAIC,EAOJ,OANKD,IACHC,EAAQ,mCAKHA,GA3BU,KA8BnBC,iBAAoBF,IAClB,IAAIC,EAMJ,OALKD,EAEMA,EAAMG,OAAS,IACxBF,EAAQ,0CAFRA,EAAQ,yBAIHA,GAnCPzB,KAAK4B,MAAQ,CACXjC,MAAO,GACPC,SAAU,GACViC,iBAAgB,GAmCpBC,qBACM9B,KAAKc,MAAMW,OACbM,IAAoBC,QAClBhC,KAAKc,MAAMW,MACX,cACA,IACA,KACA,KACA,IAKNQ,SAAU,IAAD,EACqCjC,KAAK4B,MAAzChC,EADD,EACCA,SAAUD,EADX,EACWA,MAAMkC,EADjB,EACiBA,gBAClBK,EAAgB,CAACvC,QAAMC,YAE7B,OACE,kBAAC,IAAD,CAAKuC,UAAU,SACb,kBAAC,IAAD,CAAOC,IAAI,KAAKC,GAAG,IAAIF,UAAU,mBAC/B,kBAAC,IAAD,CAAMA,UAAU,aAad,yBAAKA,UAAU,aAIb,kBAAC,IAAD,CAAWA,UAAU,QACnB,kBAAC,IAAD,CAAc3B,GAAG,sBAGnB,kBAAC,IAAD,CACE0B,cAAeA,EACfI,SAAUtC,KAAKgB,aACd,EAAGuB,SAAQC,aACV,kBAAC,IAAD,CAAML,UAAU,mCACd,kBAAC,IAAD,CAAWA,UAAU,8BACnB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAc3B,GAAG,gBAEnB,kBAAC,IAAD,CACE2B,UAAU,eACVM,KAAK,QACLC,SAAU1C,KAAKuB,gBAEhBgB,EAAO5C,OAAS6C,EAAQ7C,OACvB,yBAAKwC,UAAU,4BACZI,EAAO5C,QAId,kBAAC,IAAD,CAAWwC,UAAU,8BACnB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAc3B,GAAG,mBAEnB,kBAAC,IAAD,CACE2B,UAAU,eACV5D,KAAK,WACLkE,KAAK,WACLC,SAAU1C,KAAK0B,mBAEhBa,EAAO3C,UAAY4C,EAAQ5C,UAC1B,yBAAKuC,UAAU,4BACZI,EAAO3C,WAId,yBAAKuC,UAAU,qDAIb,kBAAC,IAAD,CACEQ,MAAM,UACNR,UAAS,wCAAmCnC,KAAKc,MAAM8B,QAAU,eAAiB,IAClFtC,KAAK,MAKL,0BAAM6B,UAAU,0BACd,0BAAMA,UAAU,YAChB,0BAAMA,UAAU,YAChB,0BAAMA,UAAU,aAElB,0BAAMA,UAAU,SAAQ,kBAAC,IAAD,CAAc3B,GAAG,yBAI3CqB,GACE,yBAAKgB,MAAO,CAACF,MAAM,MAAMG,UAAU,KAAnC,kCAoBTC,sBALS,EAAGC,eAElB,CAAEjD,KADwBiD,EAAzBjD,KACO6C,QADkBI,EAAnBJ,QACUnB,MADSuB,EAAVvB,QAMvB,CACEL,eAHW2B,CAKbpC,I,gCC/KF,iGAEMsC,EAASnC,GACX,kBAAC,IAAD,iBAASA,EAAT,CAAgBoC,OAAQ,CAAC,MAAO,KAAM,KAAM,KAAM,KAAM,KAAM,UAE5DC,EAAarC,GACf,yBAAKqB,UAAS,oBAAerB,EAAMqB,c,gCCNvC,4BAKeiB,gBAFOtC,GAAS,kBAAC,IAAqBA,GAEZ,CACrCuC,SAAS,K,gCCNb,gEAKeC,EAAf,G,gCCWgB,QAZhB,MACIzC,cACIb,KAAKuD,OAAS,GACdvD,KAAKwD,aAAc,EAEfxD,KAAKZ,cAAgB,0CACrBY,KAAKb,aAAe,yCACpBa,KAAKyD,gBAAkB","file":"static/js/user-login.de0f69ca.chunk.js","sourcesContent":["import Config from \"./config\";\n\nexport default {\n  async baseApi(sub_url, method, json_data, type = \"COVID\", cb) {\n    let authToken = localStorage[\"auth-token\"];\n\n    try {\n      let request = {\n        method,\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n          Authorization: authToken ? \"Bearer \" + authToken : null,\n        },\n      };\n      if (method == \"POST\" || method == \"PUT\") {\n        request[\"body\"] = JSON.stringify(json_data);\n      }\n      const base_url =\n        type == \"AUTH\" ? Config.AUTH_API_URL : Config.COVID_API_URL;\n      let response = await fetch(base_url + sub_url, request);\n      let responseJson = await response.json();\n      if (response.status >= 200 && response.status < 300) {\n        cb && cb(null, responseJson);\n      } else {\n        cb && cb(responseJson, null);\n      }\n    } catch (error) {\n      cb && cb(error, null);\n    }\n  },\n\n  async init(cb) {\n    var email = localStorage.email;\n    var password = localStorage.password;\n    if (password) {\n      this.login(email, password, (err, user) => {\n        cb(err, user);\n      });\n    } else {\n      cb(null);\n    }\n  },\n\n  login(email, password, cb) {\n    this.baseApi(\"/login\", \"POST\", { email, password }, \"AUTH\", (err, res) => {\n      if (err == null) {\n        console.log(\"Login success!\");\n      }\n      cb(err, res);\n    });\n  },\n  getIssuers(page, size, cb) {\n    this.baseApi(\n      `/admin/issuers/?page=${page}&size=${size}`,\n      \"GET\",\n      {},\n      \"COVID\",\n      cb\n    );\n  },\n  enRollIssuer(id, cb) {\n    this.baseApi(`/admin/issuers/${id}/enroll`, \"PUT\", {}, \"COVID\", cb);\n  },\n  revokeIssuer(id, cb) {\n    this.baseApi(`/admin/issuers/${id}/revoke`, \"PUT\", {}, \"COVID\", cb);\n  },\n  getPrefunds(page, size, cb) {\n    this.baseApi(\n      `/admin/prefunds?page=${page}&size=${size}`,\n      \"GET\",\n      {},\n      \"\",\n      cb\n    );\n  },\n};\n","import React, { Component } from \"react\";\nimport { Row, Card, CardTitle, Label, FormGroup, Button } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { NotificationManager } from \"../../components/common/react-notifications\";\nimport { Formik, Form, Field } from \"formik\";\nimport { loginUser } from \"../../redux/actions\";\nimport { Colxx } from \"../../components/common/CustomBootstrap\";\nimport IntlMessages from \"../../helpers/IntlMessages\";\nimport api from \"../../service/api/api\"\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      wrongCredential:false,\n    };\n  }\n\n  onUserLogin = (values) => {\n    api.login(values.email, values.password, async (err, res) => {\n      if(!err){\n        console.log('user data -->', res)\n        this.props.loginUser(values, this.props.history);\n        localStorage[`auth-token`] = res.data;\n      }\n    })\n  }\n\n  validateEmail = (value) => {\n    let error;\n    if (!value) {\n      error = \"Please enter your email address\";\n    } \n    // else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n    //   error = \"Invalid email address\";\n    // }\n    return error;\n  }\n\n  validatePassword = (value) => {\n    let error;\n    if (!value) {\n      error = \"Please enter your name\";\n    } else if (value.length < 4) {\n      error = \"Value must be longer than 2 characters\";\n    }\n    return error;\n  }\n\n  componentDidUpdate() {\n    if (this.props.error) {\n      NotificationManager.warning(\n        this.props.error,\n        \"Login Error\",\n        3000,\n        null,\n        null,\n        ''\n      );\n    }\n  }\n\n  render() {\n    const { password, email,wrongCredential } = this.state;\n    const initialValues = {email,password};\n\n    return (\n      <Row className=\"h-100\">\n        <Colxx xxs=\"12\" md=\"5\" className=\"mx-auto my-auto\">\n          <Card className=\"auth-card\">\n            {/* <div className=\"position-relative image-side \">\n              <p className=\"text-white h2\">Sharering</p>\n              <p className=\"white mb-0\">\n                Please use your credentials to login.\n                <br />\n                If you are not a member, please{\" \"}\n                <NavLink to={`/register`} className=\"white\">\n                  register\n                </NavLink>\n                .\n              </p>\n            </div> */}\n            <div className=\"form-side\">\n              {/* <NavLink to={`/`} className=\"white\">\n                <span className=\"logo-single\" />\n              </NavLink> */}\n              <CardTitle className=\"mb-4\">\n                <IntlMessages id=\"user.login-title\" />\n              </CardTitle>\n\n              <Formik\n                initialValues={initialValues}\n                onSubmit={this.onUserLogin}>\n                {({ errors, touched }) => (\n                  <Form className=\"av-tooltip tooltip-label-bottom\">\n                    <FormGroup className=\"form-group has-float-label\">\n                      <Label>\n                        <IntlMessages id=\"user.email\" />\n                      </Label>\n                      <Field\n                        className=\"form-control\"\n                        name=\"email\"\n                        validate={this.validateEmail}\n                      />\n                      {errors.email && touched.email && (\n                        <div className=\"invalid-feedback d-block\">\n                          {errors.email}\n                        </div>\n                      )}\n                    </FormGroup>\n                    <FormGroup className=\"form-group has-float-label\">\n                      <Label>\n                        <IntlMessages id=\"user.password\" />\n                      </Label>\n                      <Field\n                        className=\"form-control\"\n                        type=\"password\"\n                        name=\"password\"\n                        validate={this.validatePassword}\n                      />\n                      {errors.password && touched.password && (\n                        <div className=\"invalid-feedback d-block\">\n                          {errors.password}\n                        </div>\n                      )}\n                    </FormGroup>\n                    <div className=\"d-flex justify-content-between align-items-center\">\n                      {/* <NavLink to={`/forgot-password`}>\n                        <IntlMessages id=\"user.forgot-password-question\" />\n                      </NavLink> */}\n                      <Button\n                        color=\"primary\"\n                        className={`btn-shadow btn-multiple-state ${this.props.loading ? \"show-spinner\" : \"\"}`}\n                        size=\"lg\"\n                        // onClick={()=>{\n                        //   this.props.history.push(\"/app/promotions\");\n                        // }}\n                      >\n                        <span className=\"spinner d-inline-block\">\n                          <span className=\"bounce1\" />\n                          <span className=\"bounce2\" />\n                          <span className=\"bounce3\" />\n                        </span>\n                        <span className=\"label\"><IntlMessages id=\"user.login-button\" /></span>\n                      </Button>\n                    </div>\n                    {\n                      wrongCredential &&\n                        <div style={{color:'red',marginTop:15}}>\n                        Wrong email or password\n                    </div>\n                    }\n\n                  </Form>\n                )}\n              </Formik>\n            </div>\n          </Card>\n        </Colxx>\n      </Row>\n    );\n  }\n}\nconst mapStateToProps = ({ authUser }) => {\n  const { user, loading, error } = authUser;\n  return { user, loading, error };\n};\n\nexport default connect(\n  mapStateToProps,\n  {\n    loginUser\n  }\n)(Login);\n","import React from 'react';\nimport { Col } from 'reactstrap';\nconst Colxx = (props) => (\n    <Col {...props} widths={['xxs', 'xs', 'sm', 'md', 'lg', 'xl', 'xxl']} />\n);\nconst Separator = (props) => (\n    <div className={`separator ${props.className}`}></div>\n);\nexport { Colxx,Separator }","import React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\n\nconst InjectMassage = props => <FormattedMessage {...props} />;\n\nexport default injectIntl(InjectMassage, {\n    withRef: false\n});\n","import Notifications from './Notifications.js';\nimport NotificationContainer from './NotificationContainer';\nimport NotificationManager from './NotificationManager';\n\nexport { Notifications, NotificationContainer, NotificationManager };\nexport default Notifications;\n","\nconst TEST_MODE=1\nconst CURRENT_MODE = TEST_MODE\n\nclass Config {\n    constructor() {\n        this.config = {}\n        this.configReady = false;\n        if(CURRENT_MODE===TEST_MODE){\n            this.COVID_API_URL = \"https://api.testenv.sharetoken.io/covid\"\n            this.AUTH_API_URL = \"https://api.testenv.sharetoken.io/auth\"\n            this.BACKEND_API_URL = \"https://api.testenv.sharetoken.io\"\n        }\n    }\n}\n\nexport default (new Config);\n"],"sourceRoot":""}